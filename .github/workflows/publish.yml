# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - name: Store Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: package
        path: build

  deploy_github:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: package
        path: build
        
  # You may pin to the exact commit or the version.
  # uses: tagus/git-deploy@c7de901f0c7d498fefa2dbddf99290a5b3015550
    - name: Deploy to Github.io
      uses: tagus/git-deploy@v0.4.1
      with:
        # The ssh url of the target repository.
        repository: git@github.com:Arbixal/Arbixal.github.io.git
        # The path to the directory containing the changes to deploy.
        changes: build
        # SSH key used to push to the registry. The SSH key is configured with the local git config, enabling this action ro run authenticated git commands.

        ssh_key: ${{ secrets.REPO_DEPLOY_KEY }}
        # Known hosts to run ssh commands against.
        # ssh_known_hosts: # optional
        # A name for the git user creating the git commit.
        name: Arbixal
        # An email for the git user creating the git commit.
        email: arbixal@hotmail.com
        # The remote branch to push the new commit to (defaults to master)
        # branch: # optional
        # The commit message that should be used with the commit (defaults to a standard format)
        # message: # optional
        # Whether to remove files from the repo not present in the given changes
        # clean_repo: # optional
        
  deploy_aws:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: package
        path: build
        
    - name: Configure AWS Credentials  
      uses: aws-actions/configure-aws-credentials@v2
      with: 
          # Created the Secrets Under the Repo only with These Variables
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2 #--> Define Region of the AWS-CLI 
          
    - name: Deploy to S3
      run: |
        aws s3 cp ./build s3://log-summary-site/ --recursive
        aws cloudfront create-invalidation --distribution-id E1G7YVBUM32I0D --paths "/index.html"
